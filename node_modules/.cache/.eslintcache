[{"/Users/lex/Documents/PiXL/Web-Application/src/index.js":"1","/Users/lex/Documents/PiXL/Web-Application/src/App.tsx":"2","/Users/lex/Documents/PiXL/Web-Application/src/components/Navbar/Navbar.tsx":"3","/Users/lex/Documents/PiXL/Web-Application/src/components/CardTest/CardTest.tsx":"4","/Users/lex/Documents/PiXL/Web-Application/src/serviceWorker.js":"5","/Users/lex/Documents/PiXL/Web-Application/src/components/DisconnectWallet.tsx":"6","/Users/lex/Documents/PiXL/Web-Application/src/components/ConnectWallet.tsx":"7","/Users/lex/Documents/PiXL/Web-Application/src/components/UpdateContract.tsx":"8","/Users/lex/Documents/PiXL/Web-Application/src/components/Transfers.tsx":"9","/Users/lex/Documents/PiXL/Web-Application/src/components/Unity/Unity.tsx":"10","/Users/lex/Documents/PiXL/Web-Application/src/components/Unity/UnityComponent.tsx":"11","/Users/lex/Documents/PiXL/Web-Application/src/services/mintProvider.tsx":"12"},{"size":765,"mtime":1638950274355,"results":"13","hashOfConfig":"14"},{"size":2032,"mtime":1639718934650,"results":"15","hashOfConfig":"14"},{"size":4897,"mtime":1638995293230,"results":"16","hashOfConfig":"14"},{"size":1025,"mtime":1638950274352,"results":"17","hashOfConfig":"14"},{"size":5086,"mtime":1638464363699,"results":"18","hashOfConfig":"14"},{"size":1453,"mtime":1638950274354,"results":"19","hashOfConfig":"14"},{"size":3261,"mtime":1638950274353,"results":"20","hashOfConfig":"14"},{"size":2390,"mtime":1638464363698,"results":"21","hashOfConfig":"14"},{"size":1795,"mtime":1638464363698,"results":"22","hashOfConfig":"14"},{"size":5833,"mtime":1639609572779,"results":"23","hashOfConfig":"14"},{"size":7059,"mtime":1639844533384,"results":"24","hashOfConfig":"14"},{"size":1513,"mtime":1639844533385,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"y04kum",{"filePath":"30","messages":"31","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"33"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"33"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"33"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":3,"source":"53","usedDeprecatedRules":"33"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/lex/Documents/PiXL/Web-Application/src/index.js",["58","59","60"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport 'animate.css';\nimport './index.css';\nimport App from \"./App.tsx\";\nimport Navbar from \"../src/components/Navbar/Navbar.tsx\";\nimport CardTest from \"../src/components/CardTest/CardTest.tsx\";\nimport Unity1 from \"./components/Unity/Unity.tsx\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <Navbar /> */}\n    <App />\n    {/* <Unity1 />\n    <CardTest /> */}\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n",["61","62"],"/Users/lex/Documents/PiXL/Web-Application/src/App.tsx",["63","64","65","66","67","68","69","70","71"],"import React, { useState } from \"react\";\nimport { TezosToolkit } from \"@taquito/taquito\";\nimport \"./App.css\";\nimport Navbar from \"../src/components/Navbar/Navbar\";\nimport Unity1 from \"./components/Unity/Unity\";\nimport UnityComponent from \"./components/Unity/UnityComponent\"\n\nenum BeaconConnection {\n  NONE = \"\",\n  LISTENING = \"Listening to P2P channel\",\n  CONNECTED = \"Channel connected\",\n  PERMISSION_REQUEST_SENT = \"Permission request sent, waiting for response\",\n  PERMISSION_REQUEST_SUCCESS = \"Wallet is connected\"\n}\n\nconst App = () => {\n  const [Tezos, setTezos] = useState<TezosToolkit>(\n    new TezosToolkit(\"https://mainnet.api.tez.ie\")\n  );\n  const [contract, setContract] = useState<any>(undefined);\n  const [publicToken, setPublicToken] = useState<string | null>(\"\");\n  const [wallet, setWallet] = useState<any>(null);\n  const [userAddress, setUserAddress] = useState<string>(\"\");\n  const [userBalance, setUserBalance] = useState<number>(0);\n  const [storage, setStorage] = useState<number>(0);\n  const [copiedPublicToken, setCopiedPublicToken] = useState<boolean>(false);\n  const [beaconConnection, setBeaconConnection] = useState<boolean>(false);\n  const [activeTab, setActiveTab] = useState<string>(\"transfer\");\n\n  const contractAddress: string = \"KT1SGdop74rGobKAETcBPnz9yQkH38hZnpBh\";\n  return (\n    <><Navbar\n      Tezos={Tezos}\n      setContract={setContract}\n      setPublicToken={setPublicToken}\n      setWallet={setWallet}\n      setUserAddress={setUserAddress}\n      setUserBalance={setUserBalance}\n      setStorage={setStorage}\n      contractAddress={contractAddress}\n      setBeaconConnection={setBeaconConnection}\n      wallet={wallet}\n      publicToken={publicToken}\n      userAddress={userAddress}\n      userBalance={userBalance}\n      setTezos={setTezos} />\n        <UnityComponent\n          Tezos={Tezos}\n          publicToken={publicToken}\n          userAddress={userAddress}\n          userBalance={userBalance}\n          setUserBalance={setUserBalance}\n        />\n      </>\n  )\n};\n\nexport default App;\n",["72","73"],"/Users/lex/Documents/PiXL/Web-Application/src/components/Navbar/Navbar.tsx",["74","75"],"import { BeaconWallet } from \"@taquito/beacon-wallet\";\nimport { TezosToolkit } from \"@taquito/taquito\";\nimport React, { Dispatch, SetStateAction, useState } from \"react\";\nimport ConnectButton from \"../../components/ConnectWallet\";\nimport DisconnectButton from \"../../components/DisconnectWallet\";\n\ntype ButtonProps = {\n    Tezos: TezosToolkit;\n    setContract: Dispatch<SetStateAction<any>>;\n    setWallet: Dispatch<SetStateAction<any>>;\n    setUserAddress: Dispatch<SetStateAction<string>>;\n    setUserBalance: Dispatch<SetStateAction<number>>;\n    setStorage: Dispatch<SetStateAction<number>>;\n    contractAddress: string;\n    setBeaconConnection: Dispatch<SetStateAction<boolean>>;\n    setPublicToken: Dispatch<SetStateAction<string | null>>;\n    wallet: BeaconWallet;\n    publicToken: string | null;\n    userAddress: string;\n    userBalance: number;\n    setTezos: React.Dispatch<React.SetStateAction<TezosToolkit>>\n};\n\nconst Navbar = ({\n    Tezos,\n    setContract,\n    setWallet,\n    setUserAddress,\n    setUserBalance,\n    setStorage,\n    contractAddress,\n    setBeaconConnection,\n    setPublicToken,\n    wallet,\n    publicToken,\n    userAddress,\n    userBalance,\n    setTezos,\n}: ButtonProps): JSX.Element => {\n\n    const [navbarOpen, setNavbarOpen] = React.useState(false);\n\n    const splitUserAddress = (address: string) => {\n        const first = address.substr(0, 5)\n        const last = address.substr(address.length - 5)\n        return first + \"...\" + last\n    }\n    return (\n        <>\n            <nav className=\"relative flex flex-wrap items-center justify-between px-2 py-3 bg-gray-700 mb-3\">\n                <div className=\"container px-4 mx-auto flex flex-wrap items-center justify-between\">\n                    <div className=\"w-full relative flex justify-between lg:w-auto lg:static lg:block lg:justify-start\">\n                        <a\n                            className=\"text-sm font-bold leading-relaxed inline-block mr-4 py-2 whitespace-nowrap uppercase text-white\"\n                        >\n                            PiXl\n                        </a>\n                        <button\n                            className=\"text-white cursor-pointer text-xl leading-none px-3 py-1 border border-solid border-transparent rounded bg-transparent block lg:hidden outline-none focus:outline-none\"\n                            type=\"button\"\n                            onClick={() => setNavbarOpen(!navbarOpen)}\n                        >\n                            <i className=\"fas fa-bars\"></i>\n                        </button>\n                    </div>\n                    <div\n                        className={\n                            \"lg:flex flex-grow items-center\" +\n                            (navbarOpen ? \" flex\" : \" hidden\")\n                        }\n                        id=\"example-navbar-danger\"\n                    >\n                        <ul className=\"flex flex-col lg:flex-row list-none lg:ml-auto\">\n                            <li className=\"nav-item\">\n                                {(!publicToken && !userAddress && !userBalance) ?\n                                    <ConnectButton\n                                        Tezos={Tezos}\n                                        setContract={setContract}\n                                        setPublicToken={setPublicToken}\n                                        setWallet={setWallet}\n                                        setUserAddress={setUserAddress}\n                                        setUserBalance={setUserBalance}\n                                        setStorage={setStorage}\n                                        contractAddress={contractAddress}\n                                        setBeaconConnection={setBeaconConnection}\n                                        wallet={wallet}\n                                    />\n                                    :\n                                    <div className=\"flex flex-row gap-4\">\n                                        <DisconnectButton\n                                            wallet={wallet}\n                                            setPublicToken={setPublicToken}\n                                            setUserAddress={setUserAddress}\n                                            setUserBalance={setUserBalance}\n                                            setWallet={setWallet}\n                                            setTezos={setTezos}\n                                            setBeaconConnection={setBeaconConnection}\n                                        />\n                                        {splitUserAddress(userAddress)}\n                                    </div>\n                                }\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </nav>\n        </>\n    );\n}\n\nexport default Navbar","/Users/lex/Documents/PiXL/Web-Application/src/components/CardTest/CardTest.tsx",["76","77","78","79"],"import { Console } from \"console\";\nimport React, { useState, Dispatch, SetStateAction } from \"react\";\n\ntype CardList = {\n    id: string\n};\n\ntype CardObject = {\n    cardList: CardList[]\n}\n\nconst CardTest = ({\n    cardList,//pass NFT cards here we should process them beforehand to build our own structure\n}: CardObject): JSX.Element => {\n\n    const anim = (id: number, e: React.MouseEvent<HTMLElement, MouseEvent>): void => {\n        const elementId = (e.target as HTMLElement).id;\n        const x = document.getElementById(elementId);\n        if(x){\n        x.className = \"card animate__animated animate__backOutUp\"\n        }\n    };\n    const testData = [1, 2, 3, 4, 5, 6, 7, 8, 9] //try to map through so that we only use one article \n    return (\n        <section className=\"card-list mt-2\">\n            {testData.map((user) => (\n                <div key={user} id={user.toString()} onClick={(e) => anim(1, e)} className=\"card\">\n                </div>\n            ))}\n        </section>\n    );\n};\n\nexport default CardTest;\n","/Users/lex/Documents/PiXL/Web-Application/src/serviceWorker.js",[],"/Users/lex/Documents/PiXL/Web-Application/src/components/DisconnectWallet.tsx",[],"/Users/lex/Documents/PiXL/Web-Application/src/components/ConnectWallet.tsx",["80","81","82","83","84","85"],"import React, { Dispatch, SetStateAction, useState, useEffect } from \"react\";\nimport { TezosToolkit } from \"@taquito/taquito\";\nimport { BeaconWallet } from \"@taquito/beacon-wallet\";\nimport {\n  NetworkType,\n  BeaconEvent,\n  defaultEventCallbacks\n} from \"@airgap/beacon-sdk\";\nimport TransportU2F from \"@ledgerhq/hw-transport-u2f\";\nimport { LedgerSigner } from \"@taquito/ledger-signer\";\n\ntype ButtonProps = {\n  Tezos: TezosToolkit;\n  setContract: Dispatch<SetStateAction<any>>;\n  setWallet: Dispatch<SetStateAction<any>>;\n  setUserAddress: Dispatch<SetStateAction<string>>;\n  setUserBalance: Dispatch<SetStateAction<number>>;\n  setStorage: Dispatch<SetStateAction<number>>;\n  contractAddress: string;\n  setBeaconConnection: Dispatch<SetStateAction<boolean>>;\n  setPublicToken: Dispatch<SetStateAction<string | null>>;\n  wallet: BeaconWallet;\n};\n\nconst ConnectButton = ({\n  Tezos,\n  setContract,\n  setWallet,\n  setUserAddress,\n  setUserBalance,\n  setStorage,\n  contractAddress,\n  setBeaconConnection,\n  setPublicToken,\n  wallet\n}: ButtonProps): JSX.Element => {\n  const [loadingNano, setLoadingNano] = useState<boolean>(false);\n\n  const setup = async (userAddress: string): Promise<void> => {\n    setUserAddress(userAddress);\n    // updates balance\n    const balance = await Tezos.tz.getBalance(userAddress);\n    setUserBalance(balance.toNumber());\n    // creates contract instance\n    const contract = await Tezos.wallet.at(contractAddress);\n    const storage: any = await contract.storage();\n    setContract(contract);\n    // setStorage(storage.toNumber());\n  };\n\n  const connectWallet = async (): Promise<void> => {\n    try {\n      await wallet.requestPermissions({\n        network: {\n          type: NetworkType.MAINNET,\n          rpcUrl: \"https://mainnet.api.tez.ie\"\n        }\n      });\n      // gets user's address\n      const userAddress = await wallet.getPKH();\n      await setup(userAddress);\n      setBeaconConnection(true);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      // creates a wallet instance\n      const wallet = new BeaconWallet({\n        name: \"Taquito Boilerplate\",\n        preferredNetwork: NetworkType.MAINNET,\n        disableDefaultEvents: true, // Disable all events / UI. This also disables the pairing alert.\n        eventHandlers: {\n          // To keep the pairing alert, we have to add the following default event handlers back\n          [BeaconEvent.PAIR_INIT]: {\n            handler: defaultEventCallbacks.PAIR_INIT\n          },\n          [BeaconEvent.PAIR_SUCCESS]: {\n            handler: data => setPublicToken(data.publicKey)\n          }\n        }\n      });\n      Tezos.setWalletProvider(wallet);\n      setWallet(wallet);\n      // checks if wallet was connected before\n      const activeAccount = await wallet.client.getActiveAccount();\n      if (activeAccount) {\n        const userAddress = await wallet.getPKH();\n        await setup(userAddress);\n        setBeaconConnection(true);\n      }\n    })();\n  }, []);\n\n  return (\n    <div className=\"buttons\">\n      <button className=\"button\" onClick={connectWallet}>\n        <span>\n          <i className=\"fas fa-wallet\"></i>&nbsp; Sync Wallet\n        </span>\n      </button>\n    </div>\n  );\n};\n\nexport default ConnectButton;\n","/Users/lex/Documents/PiXL/Web-Application/src/components/UpdateContract.tsx",[],"/Users/lex/Documents/PiXL/Web-Application/src/components/Transfers.tsx",[],"/Users/lex/Documents/PiXL/Web-Application/src/components/Unity/Unity.tsx",["86","87","88","89","90","91","92"],"import React, { Dispatch, SetStateAction } from \"react\";\nimport \"../../App.css\";\nimport Unity, { UnityContext } from \"react-unity-webgl\";\nimport { setTimeout } from \"timers\";\nimport { compose, TezosToolkit, MichelsonMap } from \"@taquito/taquito\";\nimport { Tzip12Module, tzip12, TokenMetadata } from \"@taquito/tzip12\";\nimport { Tzip16Module, tzip16 } from \"@taquito/tzip16\";\nimport { BigNumber } from 'bignumber.js';\n\ninterface IWalletProps {\n    Tezos: TezosToolkit;\n    publicToken: string | null;\n    userAddress: string;\n    userBalance: number;\n    setUserBalance: Dispatch<SetStateAction<number>>;\n}\nconst unityContext  = new UnityContext({\n    loaderUrl: \"build/myunityapp.loader.js\",\n    dataUrl: \"build/myunityapp.data\",\n    frameworkUrl: \"build/myunityapp.framework.js\",\n    codeUrl: \"build/myunityapp.wasm\",\n});\n\nexport class Unity1 extends React.Component<IWalletProps> {\n    isCalled = false;\n    private items: any[] = [];\n    constructor(props: any,) {\n        super(props);\n    }\n\n    async componentDidUpdate(prevProps: IWalletProps) {\n        if (this.props.userAddress?.length > 1 && !this.isCalled) {\n            this.isCalled = true;\n            setTimeout(() => {\n                this.setWalletAddress();\n                this.soContact();\n            }, 10000);\n        }\n    }\n\n    // public setupUnityListners() {\n    //     unityContext .on(\"GotCoin\", (coinNumber: number) => {\n    //         if (coinNumber) {\n\n    //         }\n    //     });\n\n    //     unityContext .on(\"WalletConnected\", (randomInt: string) => {\n    //         if (randomInt) {\n\n    //         }\n    //     });\n\n    //     unityContext .on(\"GotItem\", (cardId: string) => {\n    //         if (cardId) {\n\n    //         }\n    //     });\n    // }\n\n    public onLoaded() {\n        if (this.props.userAddress?.length > 1 && !this.isCalled) {\n            this.setWalletAddress();\n            this.soContact();\n        }\n    }\n\n    public async soContact() {\n        this.props.Tezos.addExtension(new Tzip16Module());\n        this.props.Tezos.addExtension(new Tzip12Module());\n\n        const contractAddress = \"KT1SGdop74rGobKAETcBPnz9yQkH38hZnpBh\";\n        const tokenId = 1;\n        const contract = await this.props.Tezos.contract.at(contractAddress, compose(tzip16, tzip12));\n\n        console.log(`Fetching the token metadata for the token ID ${tokenId}...`);\n        // const metatData = await contract.tzip12().getTokenMetadata(1);\n        const storage: any = await contract.storage();\n        const ledger = storage.ledger || storage.accounts;\n        const val = await ledger.get({ 0: \"tz1dmSoZi281eKeU4B3W53LrAoqSa8kpCd6w\", 1: 1 });\n        if (!val) { return }\n        this.items.push({\n            name: \"entry token\",\n            imageSrc: \"https://cloudflare-ipfs.com/ipfs/QmPTFsFgEYfS3VV9uaTWfWUQGVqbaHa1t2npBUQZ4NiAvP\",\n            alt: \"entry Token\"\n        })\n        this.props.setUserBalance(1);\n    }\n\n\n    public addCard(id: string, e: React.MouseEvent<HTMLElement, MouseEvent>, cardId: string) {\n        const element = document.getElementById(id);\n        if (element) {\n            element.className = \"card animate__animated animate__backOutUp\"\n        }\n        cardId === \"entry Token\" ? unityContext .send(\"GameController\", \"InsertCoin\") : unityContext .send(\"GameController\", \"AddItem\", cardId);\n\n        this.findOtherCards();\n    }\n\n    private setWalletAddress() {\n        unityContext .send(\"GameController\", \"ConnectWallet\", this.props.userAddress);\n    }\n\n    private async findOtherCards() {\n        const contractAddress = \"KT1RJ6PbjHpwc3M5rw5s2Nbmefwbuwbdxton\";\n        const contract = await this.props.Tezos.contract.at(contractAddress, compose(tzip16, tzip12));\n        const metaDataArray: TokenMetadata[] = await Promise.all([578802, 578806, 578810, 578813].map(async (number) => {\n            return await contract.tzip12().getTokenMetadata(number);\n        }))\n\n        if (metaDataArray) {\n            this.buildCards(metaDataArray);\n        }\n    }\n\n    private async buildCards(metaDataArray: TokenMetadata[]) {\n        this.items = await Promise.all(metaDataArray.map((item) => {\n            return {\n                name: item.name,\n                imageSrc: this.createImageSrc(item.artifactUri),\n                alt: item.token_id,\n            }\n        }))\n        this.props.setUserBalance(2);\n    }\n\n    private createImageSrc(artifactUri: string | undefined) {\n        if (artifactUri) {\n            return \"https://cloudflare-ipfs.com/ipfs/\" + artifactUri.split(\"//\")[1]\n        } else {\n            return \"error\"\n        }\n    }\n\n    render() {\n        return (\n            <><div className=\"flex flex-col items-center ml-auto mr-auto unity-container\">\n                <Unity unityContext={unityContext} />            </div>\n                {this.items.length > 0 ?\n                    <section className=\"card-list mt-2 ml-auto mr-auto items-center justify-center\">\n                        {this.items.map((user) => (\n                            <div key={user.alt} id={user.alt} onClick={(e) => this.addCard(user.alt, e, user.alt)} className=\"card\">\n                                <img onClick={(e) => this.addCard(user.alt, e, user.alt)} src={user.imageSrc} alt=\"this slowpoke moves\" width=\"250\" />\n                            </div>\n                        ))}\n                    </section>\n                    : <div className=\"flex flex-row ml-auto mr-auto mt-10 w-6/12 h-32 justify-center\">\n                        <h1 className=\"text-white \"> Oh no! We can't find any tokens,Please make sure your wallet is synced and you have purchased the token <a className=\"underline\" href=\"https://objkt.com/asset/KT1SGdop74rGobKAETcBPnz9yQkH38hZnpBh/1\" target=\"_blank\">here</a></h1>\n                    </div>\n                }\n            </>\n        );\n    }\n\n}\nexport default Unity1;","/Users/lex/Documents/PiXL/Web-Application/src/components/Unity/UnityComponent.tsx",["93","94","95","96"],"/Users/lex/Documents/PiXL/Web-Application/src/services/mintProvider.tsx",["97","98","99"],{"ruleId":"100","severity":1,"message":"101","line":6,"column":8,"nodeType":"102","messageId":"103","endLine":6,"endColumn":14},{"ruleId":"100","severity":1,"message":"104","line":7,"column":8,"nodeType":"102","messageId":"103","endLine":7,"endColumn":16},{"ruleId":"100","severity":1,"message":"105","line":8,"column":8,"nodeType":"102","messageId":"103","endLine":8,"endColumn":14},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"105","line":5,"column":8,"nodeType":"102","messageId":"103","endLine":5,"endColumn":14},{"ruleId":"110","severity":1,"message":"111","line":8,"column":6,"nodeType":"102","messageId":"103","endLine":8,"endColumn":22},{"ruleId":"110","severity":1,"message":"112","line":20,"column":10,"nodeType":"102","messageId":"103","endLine":20,"endColumn":18},{"ruleId":"110","severity":1,"message":"113","line":25,"column":10,"nodeType":"102","messageId":"103","endLine":25,"endColumn":17},{"ruleId":"110","severity":1,"message":"114","line":26,"column":10,"nodeType":"102","messageId":"103","endLine":26,"endColumn":27},{"ruleId":"110","severity":1,"message":"115","line":26,"column":29,"nodeType":"102","messageId":"103","endLine":26,"endColumn":49},{"ruleId":"110","severity":1,"message":"116","line":27,"column":10,"nodeType":"102","messageId":"103","endLine":27,"endColumn":26},{"ruleId":"110","severity":1,"message":"117","line":28,"column":10,"nodeType":"102","messageId":"103","endLine":28,"endColumn":19},{"ruleId":"110","severity":1,"message":"118","line":28,"column":21,"nodeType":"102","messageId":"103","endLine":28,"endColumn":33},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"119","line":3,"column":43,"nodeType":"102","messageId":"103","endLine":3,"endColumn":51},{"ruleId":"120","severity":1,"message":"121","line":53,"column":25,"nodeType":"122","endLine":55,"endColumn":26},{"ruleId":"110","severity":1,"message":"123","line":1,"column":10,"nodeType":"102","messageId":"103","endLine":1,"endColumn":17},{"ruleId":"110","severity":1,"message":"119","line":2,"column":17,"nodeType":"102","messageId":"103","endLine":2,"endColumn":25},{"ruleId":"110","severity":1,"message":"124","line":2,"column":27,"nodeType":"102","messageId":"103","endLine":2,"endColumn":35},{"ruleId":"110","severity":1,"message":"125","line":2,"column":37,"nodeType":"102","messageId":"103","endLine":2,"endColumn":51},{"ruleId":"110","severity":1,"message":"126","line":9,"column":8,"nodeType":"102","messageId":"103","endLine":9,"endColumn":20},{"ruleId":"110","severity":1,"message":"127","line":10,"column":10,"nodeType":"102","messageId":"103","endLine":10,"endColumn":22},{"ruleId":"110","severity":1,"message":"128","line":37,"column":10,"nodeType":"102","messageId":"103","endLine":37,"endColumn":21},{"ruleId":"110","severity":1,"message":"129","line":37,"column":23,"nodeType":"102","messageId":"103","endLine":37,"endColumn":37},{"ruleId":"110","severity":1,"message":"113","line":46,"column":11,"nodeType":"102","messageId":"103","endLine":46,"endColumn":23},{"ruleId":"130","severity":1,"message":"131","line":95,"column":6,"nodeType":"132","endLine":95,"endColumn":8,"suggestions":"133"},{"ruleId":"110","severity":1,"message":"134","line":5,"column":33,"nodeType":"102","messageId":"103","endLine":5,"endColumn":45},{"ruleId":"110","severity":1,"message":"135","line":8,"column":10,"nodeType":"102","messageId":"103","endLine":8,"endColumn":19},{"ruleId":"136","severity":1,"message":"137","line":27,"column":5,"nodeType":"138","messageId":"139","endLine":29,"endColumn":6},{"ruleId":"140","severity":1,"message":"141","line":96,"column":36,"nodeType":"142","messageId":"143","endLine":96,"endColumn":54,"fix":"144"},{"ruleId":"140","severity":1,"message":"141","line":96,"column":89,"nodeType":"142","messageId":"143","endLine":96,"endColumn":107,"fix":"145"},{"ruleId":"140","severity":1,"message":"141","line":102,"column":9,"nodeType":"142","messageId":"143","endLine":102,"endColumn":27,"fix":"146"},{"ruleId":"147","severity":1,"message":"148","line":149,"column":158,"nodeType":"122","endLine":149,"endColumn":269},{"ruleId":"110","severity":1,"message":"134","line":5,"column":33,"nodeType":"102","messageId":"103","endLine":5,"endColumn":45},{"ruleId":"110","severity":1,"message":"135","line":8,"column":10,"nodeType":"102","messageId":"103","endLine":8,"endColumn":19},{"ruleId":"130","severity":1,"message":"149","line":154,"column":24,"nodeType":"150","endLine":154,"endColumn":28},{"ruleId":"147","severity":1,"message":"148","line":184,"column":154,"nodeType":"122","endLine":184,"endColumn":265},{"ruleId":"136","severity":1,"message":"137","line":5,"column":5,"nodeType":"138","messageId":"139","endLine":6,"endColumn":6},{"ruleId":"110","severity":1,"message":"151","line":9,"column":15,"nodeType":"102","messageId":"103","endLine":9,"endColumn":21},{"ruleId":"110","severity":1,"message":"151","line":26,"column":15,"nodeType":"102","messageId":"103","endLine":26,"endColumn":21},"no-unused-vars","'Navbar' is defined but never used.","Identifier","unusedVar","'CardTest' is defined but never used.","'Unity1' is defined but never used.","no-native-reassign",["152"],"no-negated-in-lhs",["153"],"@typescript-eslint/no-unused-vars","'BeaconConnection' is defined but never used.","'contract' is assigned a value but never used.","'storage' is assigned a value but never used.","'copiedPublicToken' is assigned a value but never used.","'setCopiedPublicToken' is assigned a value but never used.","'beaconConnection' is assigned a value but never used.","'activeTab' is assigned a value but never used.","'setActiveTab' is assigned a value but never used.","'useState' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Console' is defined but never used.","'Dispatch' is defined but never used.","'SetStateAction' is defined but never used.","'TransportU2F' is defined but never used.","'LedgerSigner' is defined but never used.","'loadingNano' is assigned a value but never used.","'setLoadingNano' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'Tezos', 'setBeaconConnection', 'setPublicToken', 'setWallet', and 'setup'. Either include them or remove the dependency array. If 'setWallet' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["154"],"'MichelsonMap' is defined but never used.","'BigNumber' is defined but never used.","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-whitespace-before-property","Unexpected whitespace before property send.","MemberExpression","unexpectedWhitespace",{"range":"155","text":"156"},{"range":"157","text":"156"},{"range":"158","text":"156"},"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","Assignments to the 'isCalled' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","'result' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"159","fix":"160"},[3216,3218],".",[3269,3271],[3406,3408],"Update the dependencies array to be: [Tezos, setBeaconConnection, setPublicToken, setWallet, setup]",{"range":"161","text":"162"},[2997,2999],"[Tezos, setBeaconConnection, setPublicToken, setWallet, setup]"]