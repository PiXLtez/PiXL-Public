{"ast":null,"code":"import _regeneratorRuntime from\"/Users/lex/Documents/PiXL/Web-Application/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/lex/Documents/PiXL/Web-Application/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/lex/Documents/PiXL/Web-Application/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/lex/Documents/PiXL/Web-Application/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";export var MintProvider=/*#__PURE__*/function(){function MintProvider(){_classCallCheck(this,MintProvider);}_createClass(MintProvider,[{key:\"mintItem\",value:function(){var _mintItem=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"http://localhost:5000/api/transfer\",{mode:'no-cors',method:'GET',headers:{'Content-Type':'application/json'}});case 2:result=_context.sent;return _context.abrupt(\"return\",{name:\"Tezzard\",imageSrc:this.createImageSrc(\"zdj7WcZdmBjTNB9CowV1GPqJUFdiM41YFEkHTnwiKixgHaerZ\"),alt:\"Placeholder\"});case 4:case\"end\":return _context.stop();}}},_callee,this);}));function mintItem(){return _mintItem.apply(this,arguments);}return mintItem;}()},{key:\"shareQuest\",value:function(){var _shareQuest=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(questDetails,Id){var result;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch(\"http://localhost:5000/api/transfer/shareQuest\",{mode:'no-cors',method:'POST',body:JSON.stringify({questDetails:questDetails,Id:Id}),headers:{'Content-Type':'application/json'}});case 2:result=_context2.sent;return _context2.abrupt(\"return\");case 4:case\"end\":return _context2.stop();}}},_callee2);}));function shareQuest(_x,_x2){return _shareQuest.apply(this,arguments);}return shareQuest;}()},{key:\"createImageSrc\",value:function createImageSrc(artifactUri){if(artifactUri){return\"https://cloudflare-ipfs.com/ipfs/\"+artifactUri;}else{return\"error\";}}}]);return MintProvider;}();","map":{"version":3,"sources":["/Users/lex/Documents/PiXL/Web-Application/src/services/mintProvider.tsx"],"names":["MintProvider","fetch","mode","method","headers","result","name","imageSrc","createImageSrc","alt","questDetails","Id","body","JSON","stringify","artifactUri"],"mappings":"2nBAEA,UAAaA,CAAAA,YAAb,yBAEI,uBAAc,oCACb,CAHL,kIAII,oKAEyBC,CAAAA,KAAK,CAAC,oCAAD,CAAuC,CAC7DC,IAAI,CAAE,SADuD,CAE7DC,MAAM,CAAE,KAFqD,CAG7DC,OAAO,CAAE,CACL,eAAgB,kBADX,CAHoD,CAAvC,CAF9B,QAEUC,MAFV,+CAUW,CACHC,IAAI,CAAE,SADH,CAEHC,QAAQ,CAAE,KAAKC,cAAL,CAAoB,mDAApB,CAFP,CAGHC,GAAG,CAAE,aAHF,CAVX,6DAJJ,+LAqBI,kBAAiBC,YAAjB,CAAmCC,EAAnC,wJAEyBV,CAAAA,KAAK,CAAC,+CAAD,CAAkD,CACxEC,IAAI,CAAE,SADkE,CAExEC,MAAM,CAAE,MAFgE,CAGxES,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAACJ,YAAY,CAAZA,YAAD,CAAcC,EAAE,CAAFA,EAAd,CAAf,CAHkE,CAIxEP,OAAO,CAAE,CACL,eAAgB,kBADX,CAJ+D,CAAlD,CAF9B,QAEUC,MAFV,0GArBJ,4HAmCI,wBAAeU,WAAf,CAAgD,CAC5C,GAAIA,WAAJ,CAAiB,CACb,MAAO,oCAAsCA,WAA7C,CACH,CAFD,IAEO,CACH,MAAO,OAAP,CACH,CACJ,CAzCL","sourcesContent":["import { ItemType } from \"../components/Unity/UnityComponent\"\n\nexport class MintProvider {\n\n    constructor() {\n    }\n    async mintItem() {\n        // on a successful transfer the api should return use the object details so that we can display it to the user\n        const result = await fetch(\"http://localhost:5000/api/transfer\", {\n            mode: 'no-cors',\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n        //result will be empty due to cors. Won't be an issue when both are hosted\n        return {\n            name: \"Tezzard\",\n            imageSrc: this.createImageSrc(\"zdj7WcZdmBjTNB9CowV1GPqJUFdiM41YFEkHTnwiKixgHaerZ\"),\n            alt: \"Placeholder\",\n        } as ItemType\n    }\n\n    async shareQuest(questDetails:any, Id:any) {\n        // on a successful transfer the api should return use the object details so that we can display it to the user\n        const result = await fetch(\"http://localhost:5000/api/transfer/shareQuest\", {\n            mode: 'no-cors',\n            method: 'POST',\n            body: JSON.stringify({questDetails,Id}),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n        //result will be empty due to cors. Won't be an issue when both are hosted\n        return\n    }\n\n    createImageSrc(artifactUri: string | undefined) {\n        if (artifactUri) {\n            return \"https://cloudflare-ipfs.com/ipfs/\" + artifactUri\n        } else {\n            return \"error\"\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}