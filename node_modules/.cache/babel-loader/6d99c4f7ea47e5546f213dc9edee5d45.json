{"ast":null,"code":"var _jsxFileName = \"/Users/lex/Documents/PiXL/Web-Application/src/components/CardTest/CardTest.tsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CardTest = ({\n  cardList //pass NFT cards here we should process them beforehand to build our own structure\n\n}) => {\n  const anim = (id, e) => {\n    const elementId = e.target.id;\n    const x = document.getElementById(elementId);\n\n    if (x) {\n      x.className = \"card animate__animated animate__backOutUp\";\n    }\n  };\n\n  const testData = [1, 2, 3, 4, 5, 6, 7, 8, 9]; //try to map through so that we only use one article \n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"card-list mt-2\",\n    children: testData.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n      id: user.toString(),\n      onClick: e => anim(1, e),\n      className: \"card\"\n    }, user, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_c = CardTest;\nexport default CardTest;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardTest\");","map":{"version":3,"sources":["/Users/lex/Documents/PiXL/Web-Application/src/components/CardTest/CardTest.tsx"],"names":["React","CardTest","cardList","anim","id","e","elementId","target","x","document","getElementById","className","testData","map","user","toString"],"mappings":";AACA,OAAOA,KAAP,MAA0D,OAA1D;;;AAUA,MAAMC,QAAQ,GAAG,CAAC;AACdC,EAAAA,QADc,CACL;;AADK,CAAD,KAEc;AAE3B,QAAMC,IAAI,GAAG,CAACC,EAAD,EAAaC,CAAb,KAAoE;AAC7E,UAAMC,SAAS,GAAID,CAAC,CAACE,MAAH,CAA0BH,EAA5C;AACA,UAAMI,CAAC,GAAGC,QAAQ,CAACC,cAAT,CAAwBJ,SAAxB,CAAV;;AACA,QAAGE,CAAH,EAAK;AACLA,MAAAA,CAAC,CAACG,SAAF,GAAc,2CAAd;AACC;AACJ,GAND;;AAOA,QAAMC,QAAQ,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CAAjB,CAT2B,CASkB;;AAC7C,sBACI;AAAS,IAAA,SAAS,EAAC,gBAAnB;AAAA,cACKA,QAAQ,CAACC,GAAT,CAAcC,IAAD,iBACV;AAAgB,MAAA,EAAE,EAAEA,IAAI,CAACC,QAAL,EAApB;AAAqC,MAAA,OAAO,EAAGV,CAAD,IAAOF,IAAI,CAAC,CAAD,EAAIE,CAAJ,CAAzD;AAAiE,MAAA,SAAS,EAAC;AAA3E,OAAUS,IAAV;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CApBD;;KAAMb,Q;AAsBN,eAAeA,QAAf","sourcesContent":["import { Console } from \"console\";\nimport React, { useState, Dispatch, SetStateAction } from \"react\";\n\ntype CardList = {\n    id: string\n};\n\ntype CardObject = {\n    cardList: CardList[]\n}\n\nconst CardTest = ({\n    cardList,//pass NFT cards here we should process them beforehand to build our own structure\n}: CardObject): JSX.Element => {\n\n    const anim = (id: number, e: React.MouseEvent<HTMLElement, MouseEvent>): void => {\n        const elementId = (e.target as HTMLElement).id;\n        const x = document.getElementById(elementId);\n        if(x){\n        x.className = \"card animate__animated animate__backOutUp\"\n        }\n    };\n    const testData = [1, 2, 3, 4, 5, 6, 7, 8, 9] //try to map through so that we only use one article \n    return (\n        <section className=\"card-list mt-2\">\n            {testData.map((user) => (\n                <div key={user} id={user.toString()} onClick={(e) => anim(1, e)} className=\"card\">\n                </div>\n            ))}\n        </section>\n    );\n};\n\nexport default CardTest;\n"]},"metadata":{},"sourceType":"module"}