{"ast":null,"code":"export class MintProvider {\n  constructor() {}\n\n  async mintItem() {\n    // on a successful transfer the api should return use the object details so that we can display it to the user\n    const result = await fetch(\"http://localhost:5000/api/transfer\", {\n      mode: 'no-cors',\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }); //result will be empty due to cors. Won't be an issue when both are hosted\n\n    return {\n      name: \"Tezzard\",\n      imageSrc: this.createImageSrc(\"zdj7WcZdmBjTNB9CowV1GPqJUFdiM41YFEkHTnwiKixgHaerZ\"),\n      alt: \"Placeholder\"\n    };\n  }\n\n  async shareQuest(questDetails, Id) {\n    // on a successful transfer the api should return use the object details so that we can display it to the user\n    const result = await fetch(\"http://localhost:5000/api/transfer/shareQuest\", {\n      mode: 'no-cors',\n      method: 'POST',\n      body: JSON.stringify({\n        questDetails,\n        Id\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }); //result will be empty due to cors. Won't be an issue when both are hosted\n\n    return;\n  }\n\n  createImageSrc(artifactUri) {\n    if (artifactUri) {\n      return \"https://cloudflare-ipfs.com/ipfs/\" + artifactUri;\n    } else {\n      return \"error\";\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/lex/Documents/PiXL/Web-Application/src/services/mintProvider.tsx"],"names":["MintProvider","constructor","mintItem","result","fetch","mode","method","headers","name","imageSrc","createImageSrc","alt","shareQuest","questDetails","Id","body","JSON","stringify","artifactUri"],"mappings":"AAEA,OAAO,MAAMA,YAAN,CAAmB;AAEtBC,EAAAA,WAAW,GAAG,CACb;;AACa,QAARC,QAAQ,GAAG;AACb;AACA,UAAMC,MAAM,GAAG,MAAMC,KAAK,CAAC,oCAAD,EAAuC;AAC7DC,MAAAA,IAAI,EAAE,SADuD;AAE7DC,MAAAA,MAAM,EAAE,KAFqD;AAG7DC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AAHoD,KAAvC,CAA1B,CAFa,CASb;;AACA,WAAO;AACHC,MAAAA,IAAI,EAAE,SADH;AAEHC,MAAAA,QAAQ,EAAE,KAAKC,cAAL,CAAoB,mDAApB,CAFP;AAGHC,MAAAA,GAAG,EAAE;AAHF,KAAP;AAKH;;AAEe,QAAVC,UAAU,CAACC,YAAD,EAAmBC,EAAnB,EAA2B;AACvC;AACA,UAAMX,MAAM,GAAG,MAAMC,KAAK,CAAC,+CAAD,EAAkD;AACxEC,MAAAA,IAAI,EAAE,SADkE;AAExEC,MAAAA,MAAM,EAAE,MAFgE;AAGxES,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACJ,QAAAA,YAAD;AAAcC,QAAAA;AAAd,OAAf,CAHkE;AAIxEP,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AAJ+D,KAAlD,CAA1B,CAFuC,CAUvC;;AACA;AACH;;AAEDG,EAAAA,cAAc,CAACQ,WAAD,EAAkC;AAC5C,QAAIA,WAAJ,EAAiB;AACb,aAAO,sCAAsCA,WAA7C;AACH,KAFD,MAEO;AACH,aAAO,OAAP;AACH;AACJ;;AAzCqB","sourcesContent":["import { ItemType } from \"../components/Unity/UnityComponent\"\n\nexport class MintProvider {\n\n    constructor() {\n    }\n    async mintItem() {\n        // on a successful transfer the api should return use the object details so that we can display it to the user\n        const result = await fetch(\"http://localhost:5000/api/transfer\", {\n            mode: 'no-cors',\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n        //result will be empty due to cors. Won't be an issue when both are hosted\n        return {\n            name: \"Tezzard\",\n            imageSrc: this.createImageSrc(\"zdj7WcZdmBjTNB9CowV1GPqJUFdiM41YFEkHTnwiKixgHaerZ\"),\n            alt: \"Placeholder\",\n        } as ItemType\n    }\n\n    async shareQuest(questDetails:any, Id:any) {\n        // on a successful transfer the api should return use the object details so that we can display it to the user\n        const result = await fetch(\"http://localhost:5000/api/transfer/shareQuest\", {\n            mode: 'no-cors',\n            method: 'POST',\n            body: JSON.stringify({questDetails,Id}),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n        //result will be empty due to cors. Won't be an issue when both are hosted\n        return\n    }\n\n    createImageSrc(artifactUri: string | undefined) {\n        if (artifactUri) {\n            return \"https://cloudflare-ipfs.com/ipfs/\" + artifactUri\n        } else {\n            return \"error\"\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}